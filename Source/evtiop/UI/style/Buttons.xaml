<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:UI">

    <ResourceDictionary.MergedDictionaries>
        <!-- Order is important -->
        <ResourceDictionary Source="Colors.xaml" />
        <ResourceDictionary Source="Text.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- style of sign up and login button white -->
    <Style TargetType="Button" x:Key="WhiteButton">
        <Style.Setters>
            <Setter Property="OverridesDefaultStyle" Value="True" />

            <Setter Property="Background" Value="{StaticResource TransparentBrash}"/>

            <!-- size button -->
            <Setter Property="Width" Value="260"/>
            <Setter Property="Height" Value="40"/>

            <!-- font style -->
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="20"/>

            <!-- change cursor when nouse over button -->
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">

                        <!-- round button-->
                        <Border x:Name="button" CornerRadius="20" BorderBrush="White" BorderThickness="2" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="button"  Property="Background" Value="{StaticResource LightTealBrush}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="button"  Property="Background" Value="{StaticResource VeryLightTealBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <!-- style of sign up and login button white -->
    <Style TargetType="Button" x:Key="TealButton">
        <Style.Setters>
            <Setter Property="OverridesDefaultStyle" Value="True" />

            <Setter Property="Background" Value="{StaticResource TransparentBrash}"/>

            <!-- size button -->
            <Setter Property="Width" Value="260"/>
            <Setter Property="Height" Value="40"/>

            <!-- font style -->
            <Setter Property="Foreground" Value="{StaticResource TealBrush}"/>
            <Setter Property="FontSize" Value="20"/>

            <!-- change cursor when nouse over button -->
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">

                        <!-- round button-->
                        <Border x:Name="button" CornerRadius="20" BorderBrush="{StaticResource TealBrush}" BorderThickness="2" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="button"  Property="Background" Value="{StaticResource VeryLightTealBrush}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="button"  Property="Background" Value="{StaticResource LightTealBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <!-- close button images -->
    <BitmapImage UriSource="/UI;component/images/close.png" x:Key="blackClose" />
    <BitmapImage UriSource="/UI;component/images/close_over.png" x:Key="redClose" />

    <!-- style of close button-->
    <Style x:Key="CloseButtonStyle" TargetType="{x:Type Image}">

        <!-- change cursor when mouse over button -->
        <Setter Property="Cursor" Value="Hand" />

        <!-- set default close button image -->
        <Setter Property="Source" Value="{StaticResource blackClose}" />
        <Style.Triggers>
            <!-- change close button image when mouse over -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Source" Value="{StaticResource redClose}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- edit button images -->
    <BitmapImage UriSource="/UI;component/images/pencil_icon.png" x:Key="blackPencil" />
    <BitmapImage UriSource="/UI;component/images/pencil_icon_over.png" x:Key="tealPencil" />

    <!-- style of edit button-->
    <Style x:Key="EditButtonStyle" TargetType="{x:Type Image}">

        <!-- change cursor when mouse over button -->
        <Setter Property="Cursor" Value="Hand" />
        
        <!--size of button -->
        <Setter Property="Height" Value="20"/>
        <Setter Property="Width" Value="20"/>

        <!-- set default close button image -->
        <Setter Property="Source" Value="{StaticResource blackPencil}" />
        <Style.Triggers>
            <!-- change close button image when mouse over -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Source" Value="{StaticResource tealPencil}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- highlight grid item style -->
    <Style x:Key="HighlightGrid" TargetType="{x:Type Grid}">
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource Teal}"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="Grid.MouseEnter">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation 
                                Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"
                                To="{StaticResource LightTeal}" Duration="0:0:0.5" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>

            <EventTrigger RoutedEvent="Grid.MouseLeave">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation 
                                Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"
                                To="{StaticResource Teal}" Duration="0:0:0.5" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <!-- style of user menu button -->
    <Style TargetType="Button" x:Key="UserMenuButton">
        <Style.Setters>
            <Setter Property="OverridesDefaultStyle" Value="True" />

            <Setter Property="Background" Value="White"/>

            <!-- size button -->
            <Setter Property="Width" Value="60"/>
            <Setter Property="Height" Value="20"/>

            <!-- font style -->
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontSize" Value="14"/>

            <!-- change cursor when nouse over button -->
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="button" Background="White">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger  Property="IsMouseOver" Value="True">
                                <Setter TargetName="button" Property="Background" Value="{StaticResource VeryLightTealBrush}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="button" Property="Background" Value="{StaticResource LightTealBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <!-- style of edit button -->
    <Style TargetType="Button" x:Key="EditButton">
        <Style.Setters>
            <Setter Property="OverridesDefaultStyle" Value="True" />

            <Setter Property="Background" Value="White"/>

            <!-- size button -->
            <Setter Property="Width" Value="60"/>
            <Setter Property="Height" Value="20"/>

            <!-- font style -->
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontFamily" Value="SimSun"/>

            <!-- change cursor when nouse over button -->
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="text" Background="{x:Null}">
                            <ContentPresenter x:Name="Text" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger  Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource TealBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <!-- style of category button -->
    <Style TargetType="Button" x:Key="CategoryButton">
        <Style.Setters>
            <Setter Property="OverridesDefaultStyle" Value="True" />

            <Setter Property="Background" Value="White"/>

            <!-- size button -->
            <Setter Property="Width" Value="100"/>
            <Setter Property="Height" Value="20"/>

            <!-- font style -->
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontSize" Value="14"/>

            <!-- change cursor when nouse over button -->
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="button" Background="White">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger  Property="IsMouseOver" Value="True">
                                <Setter TargetName="button" Property="Background" Value="{StaticResource VeryLightTealBrush}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="button" Property="Background" Value="{StaticResource LightTealBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>


</ResourceDictionary>